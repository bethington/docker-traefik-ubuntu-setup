version: '3.6'
services:

######### FRONTENDS ##########

# Traefik Reverse Proxy
  traefik:
    hostname: traefik
    image: traefik:v1.7.16
    container_name: traefik
    restart: always
    domainname: ${DOMAINNAME}
    networks:
      - default
      - traefik_proxy
    ports:
      - "80:80"
      - "443:443"
      - "9001:8080"
    environment:
      - GODADDY_API_KEY=${GODADDY_API_KEY}
      - GODADDY_API_SECRET=${GODADDY_API_SECRET}
    labels:
      - "traefik.enable=true"
      - "traefik.backend=traefik"
      - "traefik.frontend.rule=Host:traefik.${DOMAINNAME}"
      - "traefik.port=8080"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${USERDIR}/docker/traefik:/etc/traefik
      - ${USERDIR}/docker/shared:/shared
      
# Portainer - WebUI for Containers
  portainer:
    hostname: portainer
    image: portainer/portainer:latest
    container_name: portainer
    restart: always
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${USERDIR}/docker/portainer/data:/data
      - ${USERDIR}/docker/shared:/shared
    environment:
      - TZ=${TZ}
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=portainer"
      - "traefik.frontend.rule=Host:portainer.${DOMAINNAME}"  
      - "traefik.port=9000"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"

######### BLOCKCHAIN SERVICES ##########

# Bitcoind
  bitcoin:
    hostname: bitcoin
    container_name: bitcoin
    restart: always
    image: bethington/bitcoind:latest
    volumes:
      - ${USERDIR}/docker/bitcoin/data:/bitcoin
    ports:
      - 8332:8332
      - 8333:8333
    environment:
      - TZ=${TZ}
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=bitcoin"
      - "traefik.frontend.rule=Host:bitcoin.${DOMAINNAME}"
      - "traefik.port=8332"
      - "traefik.protocol=http"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
# Litecoind
  litecoin:
    hostname: litecoin
    container_name: litecoin
    restart: always
    image: bethington/litecoind:latest
    volumes:
      - ${USERDIR}/docker/litecoin/data:/litecoin
    ports:
      - 9332:9332
      - 9333:9333
    environment:
      - TZ=${TZ}
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=litecoin"
      - "traefik.frontend.rule=Host:litecoin.${DOMAINNAME}"
      - "traefik.port=9332"
      - "traefik.protocol=http"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
# Cardano Jormungandr rust node
  jormungandr:
    hostname: jormungandr
    container_name: jormungandr
    restart: always
    image: bethington/jormungandr:v0.7.0
    volumes:
      - ~/docker/jormungandr/.node_sec:/app/bin/.node_sec
      - ~/docker/jormungandr/data:/app/bin/data
    ports:
      - 3000:3000
      - 3100:3100
    environment:
      - TZ=${TZ}
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=jormungandr"
      - "traefik.frontend.rule=Host:jormungandr.${DOMAINNAME}"
      - "traefik.port=3100"
      - "traefik.protocol=http"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      
# NextCloud – Your Own Cloud Storage
  nextcloud:
    image: linuxserver/nextcloud
    container_name: nextcloud
    hostname: nextcloud
    restart: always
    networks:
      - traefik_proxy
#    ports:
#      - "XXXX:443"
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
    volumes:
      - ${USERDIR}/docker/nextcloud:/config
      - /mnt/backup:/data
      - ${USERDIR}/docker/shared:/shared
    labels:
      traefik.enable: "true"
      traefik.backend: nextcloud
      traefik.protocol: https
      traefik.port: 443
      traefik.frontend.rule: Host:nextcloud.${DOMAINNAME}
      traefik.frontend.headers.SSLHost: nextcloud.${DOMAINNAME}
      traefik.docker.network: traefik_proxy
      traefik.frontend.passHostHeader: "true"
      traefik.frontend.headers.SSLForceHost: "true"
      traefik.frontend.headers.SSLRedirect: "true"
      traefik.frontend.headers.browserXSSFilter: "true"
      traefik.frontend.headers.contentTypeNosniff: "true"
      traefik.frontend.headers.forceSTSHeader: "true"
      traefik.frontend.headers.STSSeconds: 315360000
      traefik.frontend.headers.STSIncludeSubdomains: "true"
      traefik.frontend.headers.STSPreload: "true"
      traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
      traefik.frontend.headers.frameDeny: "true"
      traefik.frontend.headers.customFrameOptionsValue: 'allow-from https:${DOMAINNAME}'
      
# code-server – VS Code running on a remote server, accessible through the browser.
  code:
    image: bethington/code-server
    container_name: code
    hostname: code
    restart: always
    networks:
      - traefik_proxy
#    ports:
#      - 8443:8443
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
      PASSWORD: ${PASS}

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - "${USERDIR}:/home/coder/project"
      - "${USERDIR}/docker/code:/home/coder/.local/share/code-server"
    labels:
      traefik.enable: "true"
      traefik.backend: code
      traefik.protocol: http
      traefik.port: 8080
      traefik.frontend.rule: Host:code.${DOMAINNAME}
      traefik.frontend.headers.SSLHost: code.${DOMAINNAME}
      traefik.docker.network: traefik_proxy
      traefik.frontend.passHostHeader: "true"
      traefik.frontend.headers.SSLForceHost: "true"
      traefik.frontend.headers.SSLRedirect: "true"
      traefik.frontend.headers.browserXSSFilter: "true"
      traefik.frontend.headers.contentTypeNosniff: "true"
      traefik.frontend.headers.forceSTSHeader: "true"
      traefik.frontend.headers.STSSeconds: 315360000
      traefik.frontend.headers.STSIncludeSubdomains: "true"
      traefik.frontend.headers.STSPreload: "true"
      traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
      traefik.frontend.headers.frameDeny: "true"
      traefik.frontend.headers.customFrameOptionsValue: 'allow-from https:${DOMAINNAME}' 
      
  mineos:
    image: bethington/mineos
    container_name: mineos
    restart: always
    ports:
      - "25560-25570:25560-25570"
    volumes:
      - ${USERDIR}/docker/mineos/data:/var/games/minecraft
    environment:
      - TZ=${TZ}
      - USER_NAME=bethington
      - USER_PASSWORD=${PASS}
    networks:
      - traefik_proxy
    labels:
      traefik.enable: "true"
      traefik.backend: mineos
      traefik.protocol: http
      traefik.port: 8080
      traefik.frontend.rule: Host:mineos.${DOMAINNAME}
      traefik.frontend.headers.SSLHost: mineos.${DOMAINNAME}
      traefik.docker.network: traefik_proxy
      traefik.frontend.passHostHeader: "true"
      traefik.frontend.headers.SSLForceHost: "true"
      traefik.frontend.headers.SSLRedirect: "true"
      traefik.frontend.headers.browserXSSFilter: "true"
      traefik.frontend.headers.contentTypeNosniff: "true"
      traefik.frontend.headers.forceSTSHeader: "true"
      traefik.frontend.headers.STSSeconds: 315360000
      traefik.frontend.headers.STSIncludeSubdomains: "true"
      traefik.frontend.headers.STSPreload: "true"
      traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
      traefik.frontend.headers.frameDeny: "true"
      traefik.frontend.headers.customFrameOptionsValue: 'allow-from https:${DOMAINNAME}' 
  
######### DOCKER RELATED ##########

# Watchtower - Automatic Update of Containers/Apps
  watchtower:
    image: v2tec/watchtower
    container_name: watchtower
    hostname: watchtower
    restart: unless-stopped
    command: --schedule "0 0 23 * * SUN" --cleanup
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      
networks:
  traefik_proxy:
    external:
      name: traefik_proxy
  default:
    driver: bridge
