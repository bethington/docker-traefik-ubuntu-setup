version: '3.6'
services:

######### FRONTENDS ##########

# Traefik Reverse Proxy
  traefik:
    hostname: traefik
    image: traefik:v1.7.16
    container_name: traefik
    restart: always
    domainname: ${DOMAINNAME}
    networks:
      - default
      - proxy
    ports:
      - 80:80
      - 9001:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${USERDIR}/docker/traefik:/etc/traefik
      - ${USERDIR}/docker/shared:/shared
    environment:
      - GODADDY_API_KEY=${GODADDY_API_KEY}
      - GODADDY_API_SECRET=${GODADDY_API_SECRET}
    labels:
      - "traefik.enable=true"
      - "traefik.backend=traefik"
      - "traefik.port=80"
      - "traefik.frontend.rule=Host:traefik.${DOMAINNAME}"
      - "traefik.admin.frontend.rule=Host:admin-traefik.${DOMAINNAME}"
      - "traefik.admin.port=8080"
      - "traefik.docker.network=proxy"
      
# ghost - Ghost is a free and open source blogging platform
  ghost:
    image: ghost:4-alpine
    depends_on:
      - ghost-mysql
    container_name: ghost
    restart: always
    networks:
      - proxy
    volumes:
      - ${USERDIR}/docker/ghost/data:/data
      - ${USERDIR}/docker/shared:/shared
    environment:
      # see https://ghost.org/docs/config/#configuration-options
      TZ=${TZ}
      PUID: ${PUID}
      PGID: ${PGID}
      database__client: mysql
      database__connection__host: ghost-mysql
      database__connection__port: 3306
      database__connection__user: bethington
      database__connection__password: ${PASS}
      database__connection__database: ghost
      url: https://ghost.${DOMAINNAME}
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=ghost"
      - "traefik.port=2368"
      - "traefik.frontend.rule=Host:ghost.${DOMAINNAME}"  
      - "traefik.docker.network=proxy"
      
# mysql – MySQL is a widely used, open-source relational database management system (RDBMS).
  ghost-mysql:
    image: mysql:5.7
    container_name: ghost-mysql
    restart: always
    volumes:
      - ${USERDIR}/docker/ghost-mysql/data:/var/lib/mysql
    environment:
      TZ: ${TZ}
      PUID: ${PUID}
      PGID: ${PGID}
      MYSQL_ROOT_PASSWORD: ${PASS}
      MYSQL_DATABASE: ghost
      MYSQL_USER: bethington
      MYSQL_PASSWORD: ${PASS}
      
# Portainer - WebUI for Containers
  portainer:
    hostname: portainer
    image: portainer/portainer:latest
    container_name: portainer
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${USERDIR}/docker/portainer/data:/data
      - ${USERDIR}/docker/shared:/shared
    environment:
      TZ: ${TZ}
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=portainer"
      - "traefik.port=9000"
      - "traefik.frontend.rule=Host:portainer.${DOMAINNAME}"  
      - "traefik.docker.network=proxy"
      
# NextCloud – Your Own Cloud Storage
  nextcloud:
    image: nextcloud
    container_name: nextcloud
    hostname: nextcloud
    restart: always
    networks:
      - proxy
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
      MYSQL_PASSWORD: ${PASS}
      MYSQL_DATABASE: nextcloud
      MYSQL_USER: root
      MYSQL_HOST: mysql
      NEXTCLOUD_ADMIN_USER: bethington
      NEXTCLOUD_ADMIN_PASSWORD: ${PASS}
    volumes:
      - ${USERDIR}/docker/nextcloud:/var/www/html
    labels:
      traefik.enable: "true"
      traefik.backend: nextcloud
      traefik.port: 80
      traefik.frontend.rule: Host:nextcloud.${DOMAINNAME}
      traefik.docker.network: proxy
      
# code-server – VS Code running on a remote server, accessible through the browser.
  code:
    image: bethington/code-server
    container_name: code
    hostname: code
    restart: always
    networks:
      - proxy
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
      PASSWORD: ${PASS}
      SUDO_PASSWORD: ${PASS}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - "${USERDIR}:/home/coder"
    labels:
      traefik.enable: "true"
      traefik.backend: code
      traefik.port: 8080
      traefik.frontend.rule: Host:code.${DOMAINNAME}
      traefik.docker.network: proxy
      
# Home Assistant - Open source home automation that puts local control and privacy first.
  home:
    image: homeassistant/home-assistant:stable
    container_name: home
    hostname: home
    restart: always
    networks:
      - proxy
    environment:
      - TZ=${TZ}
    volumes:
      - ${USERDIR}/docker/home:/config
    labels:
      traefik.enable: "true"
      traefik.backend: home
      traefik.port: 8123
      traefik.frontend.rule: Host:home.${DOMAINNAME}
      traefik.docker.network: proxy
      
# Node-RED - Low-code programming for event-driven applications.
  red:
    image: nodered/node-red
    container_name: red
    hostname: red
    restart: always
    networks:
      - proxy
    environment:
      TZ: ${TZ}
    volumes:
      - ${USERDIR}/docker/red:/data
    labels:
      traefik.enable: "true"
      traefik.backend: red
      traefik.port: 1880
      traefik.frontend.rule: Host:red.${DOMAINNAME}
      traefik.docker.network: proxy
      
# adminer - Database management in a single PHP file.
  adminer:
    image: adminer
    container_name: adminer
    hostname: adminer
    restart: always
    networks:
      - proxy
    labels:
      traefik.enable: true
      traefik.backend: adminer
      traefik.port: 8080
      traefik.frontend.rule: Host:adminer.${DOMAINNAME}
      traefik.docker.network: proxy
      
# Eclipse Mosquitto - An open source message broker which implements MQTT version 5, 3.1.1 and 3.1
#   mqtt:
#     image: eclipse-mosquitto
#     container_name: mqtt
#     hostname: mqtt
#     restart: always
#     networks:
#       - proxy
#     ports:
#       - 1883:1883
#       - 9002:9001
#     environment:
#       - TZ=${TZ}
#     volumes:
#       - ${USERDIR}/docker/mqtt/config:/mosquitto/config
#       - ${USERDIR}/docker/mqtt/data:/mosquitto/data
#       - ${USERDIR}/docker/mqtt/log:/mosquitto/log
      
# GitLab Community Edition docker image based on the Omnibus package
#   gitlab:
#     image: gitlab/gitlab-ce
#     container_name: gitlab
#     hostname: gitlab
#     restart: always
#     networks:
#       - proxy
#     environment:
#       - TZ=${TZ}
#     volumes:
#       - ${USERDIR}/docker/gitlab/config:/etc/gitlab
#       - ${USERDIR}/docker/gitlab/logs:/var/log/gitlab
#       - ${USERDIR}/docker/gitlab/data:/var/opt/gitlab
#     labels:
#       traefik.enable: "true"
#       traefik.backend: gitlab
#       traefik.port: 80
#       traefik.frontend.rule: Host:gitlab.${DOMAINNAME}
#       traefik.docker.network: proxy
      
# noVNC - the open source VNC client
  vncmac:
    image: dougw/novnc
    container_name: vncmac
    hostname: vncmac
    restart: always
    networks:
      - proxy
    environment:
      - TZ=${TZ}
      - REMOTE_HOST=10.0.0.122
      - REMOTE_PORT=5900
    labels:
      traefik.enable: "true"
      traefik.backend: vncmac
      traefik.port: 8081
      traefik.frontend.rule: Host:vncmac.${DOMAINNAME}
      traefik.docker.network: proxy
      
  mineos:
    image: bethington/mineos
    container_name: mineos
    restart: always
    ports:
      - "25560-25570:25560-25570"
    volumes:
      - ${USERDIR}/docker/mineos/data:/var/games/minecraft
    environment:
      - TZ=${TZ}
      - USER_NAME=bethington
      - USER_PASSWORD=${PASS}
    networks:
      - proxy
    labels:
      traefik.enable: "true"
      traefik.backend: mineos
      traefik.port: 8080
      traefik.frontend.rule: Host:mineos.${DOMAINNAME}
      traefik.docker.network: proxy
      
  minecraft-isaac:
    image: itzg/minecraft-server
    hostname: minecraft-isaac
    container_name: minecraft-isaac
    restart: always
    ports:
    - 25556:25565
    - 25536:25535
    volumes:
    - ${USERDIR}/docker/minecraft/data:/data
    environment:
        EULA: "true"
        TYPE: PAPER
        OPS: bethington,GamerKid___
        DIFFICULTY: easy
        ICON: https://www.whats-your-sign.com/wp-content/uploads/2018/04/RavenCelticTattoo.jpg
        OVERRIDE_ICON: "true"
        ENABLE_RCON: "true"
        RCON_PASSWORD: eth123
        RCON_PORT: 25535
        MAX_BUILD_HEIGHT: 300
        MODE: survival
        MOTD: "Raven Claw"
        PVP: "true"
        LEVEL: "ravenworld"
        MEMORY: 2G
        TZ: ${TZ}
      # tty: true
      # stdin_open: true

  # minecraft-alex:
  #   image: itzg/minecraft-server
  #   hostname: minecraft-alex
  #   container_name: minecraft-alex
  #   restart: always
  #   ports:
  #   - 25558:25565
  #   - 25538:25535
  #   volumes:
  #   - ${USERDIR}/docker/minecraft-alex/data:/data
  #   environment:
  #       EULA: "true"
  #       TYPE: PAPER
  #       OPS: bethington,knoalexYT_TTV
  #       DIFFICULTY: hard
  #       ICON: https://d3el53au0d7w62.cloudfront.net/wp-content/uploads/2017/04/13/a01_jd_14apr_otter-2.jpg
  #       OVERRIDE_ICON: "true"
  #       ENABLE_RCON: "true"
  #       RCON_PASSWORD: eth123
  #       RCON_PORT: 25535
  #       FORCE_GAMEMODE: "true"
  #       SPAWN_PROTECTION: "15"
  #       MAX_BUILD_HEIGHT: 300
  #       MODE: survival
  #       SERVER_NAME: "Uberleben-merhspieler"
  #       MOTD: "Be wild stay anarchists"
  #       PVP: "true"
  #       LEVEL: "Uberleben-Merhspieler"
  #       MEMORY: 4G
  #       TZ: ${TZ}
  #     tty: true
  #     stdin_open: true
      
# gwbcd – Guidewire Billing Center Docs
  gwbcd:
    image: httpd:2.4
    container_name: gwbcd
    hostname: gwbcd
    restart: always
    networks:
      - proxy
    volumes:
      - ${USERDIR}/docker/gwbcd/httpd.conf:/usr/local/apache2/conf/httpd.conf
      - ${USERDIR}/docker/gwbcd/data:/usr/local/apache2/htdocs/
      - ${USERDIR}/docker/shared:/shared
    labels:
      traefik.enable: "true"
      traefik.backend: gwbcd
      traefik.port: 80
      traefik.frontend.rule: Host:gwbcd.${DOMAINNAME}
      traefik.docker.network: proxy

# gwccd – Guidewire Claims Center Docs
  gwccd:
    image: httpd:2.4
    container_name: gwccd
    hostname: gwccd
    restart: always
    networks:
      - proxy
    volumes:
      - ${USERDIR}/docker/gwccd/httpd.conf:/usr/local/apache2/conf/httpd.conf
      - ${USERDIR}/docker/gwccd/data:/usr/local/apache2/htdocs/
      - ${USERDIR}/docker/shared:/shared
    labels:
      traefik.enable: "true"
      traefik.backend: gwccd
      traefik.port: 80
      traefik.frontend.rule: Host:gwccd.${DOMAINNAME}
      traefik.docker.network: proxy

# gwpcd – Guidewire Policy Center Docs
  gwpcd:
    image: httpd:2.4
    container_name: gwpcd
    hostname: gwpcd
    restart: always
    networks:
      - proxy
    volumes:
      - ${USERDIR}/docker/gwpcd/httpd.conf:/usr/local/apache2/conf/httpd.conf
      - ${USERDIR}/docker/gwpcd/data:/usr/local/apache2/htdocs/
      - ${USERDIR}/docker/shared:/shared
    labels:
      traefik.enable: true
      traefik.backend: gwpcd
      traefik.port: 80
      traefik.frontend.rule: Host:gwpcd.${DOMAINNAME}
      traefik.docker.network: proxy
      
# search – Solr powerful open source search
#   search:
#     image: solr:8
#     container_name: search
#     hostname: search
#     restart: always
#     networks:
#       - proxy
#     ulimits:
#       memlock:
#         soft: -1
#         hard: -1
#     volumes:
#       - ${USERDIR}/docker/search:/var/solr
#       - ${USERDIR}/docker/shared:/shared
#     environment:
#       SOLR_JAVA_MEM: "-Xms1g -Xmx10g"
#       TZ: ${TZ}
#     command:
#       - solr-precreate
#       - gettingstarted
#     labels:
#       traefik.enable: true
#       traefik.backend: search
#       traefik.port: 8983
#       traefik.frontend.rule: Host:search.${DOMAINNAME}
#       traefik.docker.network: proxy
      
######### BLOCKCHAIN SERVICES ##########

# Bitcoind
#  bitcoin:
#    hostname: bitcoin
#    container_name: bitcoin
#    restart: always
#    image: bethington/bitcoind:latest
#    volumes:
#      - ${USERDIR}/docker/bitcoin/data:/bitcoin
#    ports:
#      - 8332:8332
#      - 8333:8333
#    environment:
#      - TZ=${TZ}
#    networks:
#      - proxy
#    labels:
#      - "traefik.enable=true"
#      - "traefik.backend=bitcoin"
#      - "traefik.frontend.rule=Host:bitcoin.${DOMAINNAME}"
#      - "traefik.port=8332"
#      - "traefik.protocol=http"
#      - "traefik.docker.network=proxy"
#      - "traefik.frontend.headers.SSLRedirect=true"
# Litecoind
#  litecoin:
#    hostname: litecoin
#    container_name: litecoin
#    restart: always
#    image: bethington/litecoind:latest
#    volumes:
#      - ${USERDIR}/docker/litecoin/data:/litecoin
#    ports:
#      - 9332:9332
#      - 9333:9333
#    environment:
#      - TZ=${TZ}
#    networks:
#      - proxy
#    labels:
#      - "traefik.enable=true"
#      - "traefik.backend=litecoin"
#      - "traefik.frontend.rule=Host:litecoin.${DOMAINNAME}"
#      - "traefik.port=9332"
#      - "traefik.protocol=http"
#      - "traefik.docker.network=proxy"
#      - "traefik.frontend.headers.SSLRedirect=true"
# Cardano Jormungandr rust node
#  jormungandr:
#    hostname: jormungandr
#    container_name: jormungandr
#    restart: always
#    image: bethington/jormungandr:v0.8.9
#    volumes:
#      - ~/docker/jormungandr/cfg:/app/cfg
#      - ~/docker/jormungandr/secret:/app/secret
#      - ~/docker/jormungandr/data:/app/bin/data
#    ports:
#      - 8299:8299
#    environment:
#      - TZ=${TZ}
#    networks:
#      - proxy
#    labels:
#      - "traefik.enable=true"
#      - "traefik.backend=jormungandr"
#      - "traefik.frontend.rule=Host:jormungandr.${DOMAINNAME}"
#      - "traefik.port=8448"
#      - "traefik.protocol=http"
#      - "traefik.docker.network=proxy"
#      - "traefik.frontend.headers.SSLRedirect=true"
#
# Cardano node - Images in this repository contain IOHK-managed configuration for the supported public networks
#   cardano:
#     hostname: cardano
#     container_name: cardano
#     restart: always
#     image: inputoutput/cardano-node:latest
#     volumes:
#       - ~/docker/cardano/cfg:/configuration
#       - ~/docker/cardano/data:/app/bin/data
#       - ~/docker/shared/node-ipc:/ipc
#     environment:
#       - TZ=${TZ}
#       - NETWORK=mainnet
#     networks:
#       - proxy
#     entrypoint: run --config /configuration/configuration.yaml --topology /configuration/topology.json --database-path /db
  
######### DOCKER RELATED ##########

# Watchtower - Automatic Update of Containers/Apps
  watchtower:
    image: v2tec/watchtower
    container_name: watchtower
    hostname: watchtower
    restart: unless-stopped
    command: --schedule "0 0 23 * * SUN" --cleanup
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      
networks:
  proxy:
    external:
      name: proxy
  default:
    driver: bridge
