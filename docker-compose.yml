version: '3.6'
services:

######### FRONTENDS ##########

# Traefik Reverse Proxy
  traefik:
    hostname: traefik
    image: traefik:latest
    container_name: traefik
    restart: always
    domainname: ${DOMAINNAME}
    networks:
      - default
      - traefik_proxy
    ports:
      - "80:80"
      - "443:443"
      - "9001:8080"
    environment:
      - GODADDY_API_KEY=${GODADDY_API_KEY}
      - GODADDY_API_SECRET=${GODADDY_API_SECRET}
    labels:
      - "traefik.enable=true"
      - "traefik.backend=traefik"
      - "traefik.frontend.rule=Host:traefik.${DOMAINNAME}"
      - "traefik.port=8080"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${USERDIR}/docker/traefik:/etc/traefik
      - ${USERDIR}/docker/shared:/shared
      
# Portainer - WebUI for Containers
  portainer:
    hostname: portainer
    image: portainer/portainer:latest
    container_name: portainer
    restart: always
    command: -H unix:///var/run/docker.sock
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${USERDIR}/docker/portainer/data:/data
      - ${USERDIR}/docker/shared:/shared
    environment:
      - TZ=${TZ}
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=portainer"
      - "traefik.frontend.rule=Host:portainer.${DOMAINNAME}"  
      - "traefik.port=9000"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"

######### BLOCKCHAIN SERVICES ##########

# Bitcoind
  bitcoin:
    hostname: bitcoin
    container_name: bitcoin
    restart: always
    image: bethington/bitcoind:latest
    volumes:
      - ${USERDIR}/docker/bitcoin/data:/bitcoin
    ports:
      - 8332:8332
      - 8333:8333
    environment:
      - TZ=${TZ}
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=bitcoin"
      - "traefik.frontend.rule=Host:bitcoin.${DOMAINNAME}"
      - "traefik.port=8332"
      - "traefik.protocol=http"
      - "traefik.docker.network=traefik_proxy"
# Litecoind
  litecoin:
    hostname: litecoin
    container_name: litecoin
    restart: always
    image: bethington/litecoind:latest
    volumes:
      - ${USERDIR}/docker/litecoin/data:/litecoin
    ports:
      - 9332:9332
      - 9333:9333
    environment:
      - TZ=${TZ}
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=litecoin"
      - "traefik.frontend.rule=Host:litecoin.${DOMAINNAME}"
      - "traefik.port=9332"
      - "traefik.protocol=http"
      - "traefik.docker.network=traefik_proxy"
      
  # cardano:
  #   image: bethington/cardano-sl-mainnet
  #   container_name: cardano
  #   restart: always
  #   ports:
  #     - "8000:8000"
  #     - "8100:8100"
  #     - "8110:8110"
  #   volumes:
  #     - ${USERDIR}/docker/cardano/data:/opt/cardano-sl/state-explorer-mainnet
  #   environment:
  #     - TZ=${TZ}
  #   networks:
  #     - traefik_proxy
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.backend=cardano"
  #     - "traefik.frontend.rule=Host:cardano.${DOMAINNAME}"
  #     - "traefik.port=8000"
  #     - "traefik.docker.network=traefik_proxy"
  #     - "traefik.frontend.headers.SSLRedirect=true"
  #     - "traefik.frontend.headers.STSSeconds=315360000"
  #     - "traefik.frontend.headers.browserXSSFilter=true"
  #     - "traefik.frontend.headers.contentTypeNosniff=true"
  #     - "traefik.frontend.headers.forceSTSHeader=true"
  #     - "traefik.frontend.headers.STSIncludeSubdomains=true"
  #     - "traefik.frontend.headers.STSPreload=true"
  #     - "traefik.frontend.headers.frameDeny=true"
  # cardanotest:
  #   image: bethington/cardano-sl-testnet
  #   container_name: cardanotest
  #   restart: always
  #   ports:
  #     - "8001:8000"
  #     - "8101:8100"
  #     - "8111:8110"
  #   volumes:
  #     - ${USERDIR}/docker/cardano/datatest:/opt/cardano-sl/state-explorer-testnet
  #   environment:
  #     - TZ=${TZ}
  #   networks:
  #     - traefik_proxy
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.backend=cardanotest"
  #     - "traefik.frontend.rule=Host:cardanotest.${DOMAINNAME}"
  #     - "traefik.port=8000"
  #     - "traefik.docker.network=traefik_proxy"
  #     - "traefik.frontend.headers.SSLRedirect=true"
  #     - "traefik.frontend.headers.STSSeconds=315360000"
  #     - "traefik.frontend.headers.browserXSSFilter=true"
  #     - "traefik.frontend.headers.contentTypeNosniff=true"
  #     - "traefik.frontend.headers.forceSTSHeader=true"
  #     - "traefik.frontend.headers.STSIncludeSubdomains=true"
  #     - "traefik.frontend.headers.STSPreload=true"
  #     - "traefik.frontend.headers.frameDeny=true"
  # mineos:
  #   image: hexparrot/mineos:node-crux
  #   container_name: mineos
  #   restart: always
  #   ports:
  #     - "8180:8080"
  #     - "8123:8123"
  #     - "25560-25570:25560-25570"
  #   volumes:
  #     - ${USERDIR}/docker/mineos/data:/var/games/minecraft
  #   environment:
  #     - TZ=${TZ}
  #     - USER_NAME=bethington
  #     - USER_PASSWORD=goodyx12
  #   networks:
  #     - traefik_proxy
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.backend=mineos"
  #     - "traefik.frontend.rule=Host:mineos.${DOMAINNAME}"
  #     - "traefik.port=8080"
  #     - "traefik.docker.network=traefik_proxy"
  #     - "traefik.frontend.headers.SSLRedirect=true"
  #     - "traefik.frontend.headers.STSSeconds=315360000"
  #     - "traefik.frontend.headers.browserXSSFilter=true"
  #     - "traefik.frontend.headers.contentTypeNosniff=true"
  #     - "traefik.frontend.headers.forceSTSHeader=true"
  #     - "traefik.frontend.headers.STSIncludeSubdomains=true"
  #     - "traefik.frontend.headers.STSPreload=true"
  #     - "traefik.frontend.headers.frameDeny=true"
  # getbitbox:
  #   image: bethington/mean:latest
  #   container_name: getbitbox
  #   restart: always
  #   ports:
  #     - "4040:4040"
  #   volumes:
  #     - ${USERDIR}/docker/getbitbox/Development:/Development
  #   environment:
  #     - TZ=${TZ}
  #     - NODE_ENV=production
  #     - SERVER_PORT=4040
  #     - JWT_SECRET=0a6b944d-d2fb-46fc-a85e-0295c986cd9f
  #     - MONGO_HOST="mongodb://mongo/odmp"
  #   networks:
  #     - traefik_proxy
  #   depends_on:
  #     - mongo
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.backend=getbitbox"
  #     - "traefik.frontend.rule=Host:getbitbox.${DOMAINNAME}, getbitbox.org, getbitbox.net, getbitbox.xyz, getbitbox.info, getbitbox.us, reesservices.com"  
  #     - "traefik.port=4040"
  #     - "traefik.docker.network=traefik_proxy"
  #     - "traefik.frontend.headers.SSLRedirect=true"
  #     - "traefik.frontend.headers.STSSeconds=315360000"
  #     - "traefik.frontend.headers.browserXSSFilter=true"
  #     - "traefik.frontend.headers.contentTypeNosniff=true"
  #     - "traefik.frontend.headers.forceSTSHeader=true"
  #     - "traefik.frontend.headers.STSIncludeSubdomains=true"
  #     - "traefik.frontend.headers.STSPreload=true"
  #     - "traefik.frontend.headers.frameDeny=true" 
  # mongo:
  #   image: mongo:3.6
  #   container_name: mongodb
  #   restart: always
  #   ports:
  #     - "27017:27017"
  #   # volumes:
  #   #   - ${USERDIR}/docker/getbitbox/data/db:/data/db
  #   #   - ${USERDIR}/docker/getbitbox/data/mongodb:/var/lib/mongodb
  #   #   - ${USERDIR}/docker/getbitbox/data/mongodb/log:/var/log/mongodb
  #   networks:
  #     - traefik_proxy
networks:
  traefik_proxy:
    external:
      name: traefik_proxy
  default:
    driver: bridge
